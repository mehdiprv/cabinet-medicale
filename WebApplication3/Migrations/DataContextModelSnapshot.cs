// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetDotNet.DbContexts;

#nullable disable

namespace WebApplication3.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication3.Models.DossiersMedicaux", b =>
                {
                    b.Property<int>("DossierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DossierId"));

                    b.Property<DateTime?>("ConsultationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdDocteurs")
                        .HasColumnType("int");

                    b.Property<int?>("IdPatients")
                        .HasColumnType("int");

                    b.Property<int>("MedcinIdUsers")
                        .HasColumnType("int");

                    b.Property<string>("Prescriptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultatsExamens")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DossierId");

                    b.HasIndex("IdPatients");

                    b.HasIndex("MedcinIdUsers");

                    b.ToTable("DossiersMedicaux");
                });

            modelBuilder.Entity("WebApplication3.Models.RendezVous", b =>
                {
                    b.Property<int?>("RendezVousId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("RendezVousId"));

                    b.Property<string>("ConsultationDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateHeure")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdDocteurs")
                        .HasColumnType("int");

                    b.Property<int?>("IdPatients")
                        .HasColumnType("int");

                    b.HasKey("RendezVousId");

                    b.HasIndex("IdDocteurs");

                    b.HasIndex("IdPatients");

                    b.ToTable("Rendezvous");
                });

            modelBuilder.Entity("WebApplication3.Models.User", b =>
                {
                    b.Property<int>("IdUsers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsers"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsers");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("WebApplication3.Models.Patients", b =>
                {
                    b.HasBaseType("WebApplication3.Models.User");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Patients");
                });

            modelBuilder.Entity("WebApplication3.Models.DossiersMedicaux", b =>
                {
                    b.HasOne("WebApplication3.Models.User", "Patient")
                        .WithMany()
                        .HasForeignKey("IdPatients");

                    b.HasOne("WebApplication3.Models.User", "Medcin")
                        .WithMany()
                        .HasForeignKey("MedcinIdUsers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medcin");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("WebApplication3.Models.RendezVous", b =>
                {
                    b.HasOne("WebApplication3.Models.User", "Medcin")
                        .WithMany()
                        .HasForeignKey("IdDocteurs");

                    b.HasOne("WebApplication3.Models.User", "Patient")
                        .WithMany()
                        .HasForeignKey("IdPatients");

                    b.Navigation("Medcin");

                    b.Navigation("Patient");
                });
#pragma warning restore 612, 618
        }
    }
}
